@page "/"
@rendermode InteractiveServer

<PageTitle>POKER</PageTitle>

<Container>
    <Row>
        <Column ColumnSize="ColumnSize.Is8">
            <Card>
                <CardHeader>Spelare</CardHeader>
                <CardBody>
                    <CardText>
                        
                        <Table FixedHeader FixedHeaderTableHeight="300px">
                            <TableHeader>
                                <TableRow>
                                    <TableHeaderCell>#</TableHeaderCell>
                                    <TableHeaderCell>Spelare</TableHeaderCell>
                                    <TableHeaderCell>Poäng runda 1</TableHeaderCell>
                                    <TableHeaderCell>Poäng runda 2</TableHeaderCell>
                                    <TableHeaderCell>Total poäng</TableHeaderCell>
                                    <TableHeaderCell></TableHeaderCell>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                @foreach(var row in _scoreBoard.ScoreTable(_scoreAlgorithm))
                                {
                                    <TableRow @key="@row.Player.Name">
                                        <TableRowHeader>@row.Position</TableRowHeader>
                                        <TableRowCell>@row.Player.Name</TableRowCell>
                                        <TableRowCell>@row.Scores[0]</TableRowCell>
                                        <TableRowCell>@row.Scores[1]</TableRowCell>
                                        <TableRowCell>@row.TotalScore</TableRowCell>
                                        <TableRowCell>
                                            @if (row.IsStillInTheGame)
                                            {
                                                <Button @onclick="() => Out(row.Player)">Ute</Button>
                                            }
                                        </TableRowCell>
                                    </TableRow>
                                }
                            </TableBody>
                        </Table>
                    </CardText>
                </CardBody>
            </Card>
        </Column>
        <Column ColumnSize="ColumnSize.Is4">
            <Card>
                <CardHeader>Registera spelare</CardHeader>
                <CardBody>
                    <CardText>
                        <Field>
                            <FieldLabel>Namn:</FieldLabel>
                            <TextEdit @bind-Text="@name"></TextEdit>
                        </Field>
                    </CardText>
                </CardBody>

                <CardFooter>
                    <Button @onclick="AddPlayer">Registera</Button>
                </CardFooter>
            </Card>
        </Column>
    </Row>
</Container>

@code {
    private string name;

    private ScoreBoard _scoreBoard = new ScoreBoard();
    private IScoreAlgorithm _scoreAlgorithm = new OutPositionScoreAlgorithm();

    protected override void OnInitialized()
    {
        _scoreBoard.AddPlayer("Jimmy");
        _scoreBoard.AddPlayer("Peter");
        _scoreBoard.AddPlayer("Patrik");
        _scoreBoard.AddPlayer("Staffan");
        
        base.OnInitialized();
    }

    private void AddPlayer()
    {
        _scoreBoard.AddPlayer(name);
        name = string.Empty;
    }

    private void Out(Player player)
    {
        _scoreBoard.Out(player);
    }

}